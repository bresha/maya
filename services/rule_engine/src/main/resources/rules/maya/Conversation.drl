package rules.maya;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.gpt3.completion.GPT3Completion;
import com.mindsmiths.ruleEngine.model.Heartbeat
import com.mindsmiths.GoogleTranslateAdapter.Result;

import java.util.Date

import agents.Maya;

rule "First contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Maya()
    then
        agent.sendMessage("Hej, moje ime je Maya i ja sam tvoj virtualni asistent za učenje");
        agent.sendMessage("Kako se ti zoveš?");
        agent.send("SMITH", initialize, "new-agent");
        delete(message);
end

rule "Name given"
    salience 90
    when
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Maya(
            name == null
        )
    then
        modify(agent) {
            setName(message.getText()),
            setAskedStudyWithMe(true)
        };
        agent.sendMessage(String.format("Pozdrav %1$s, da li želiš učiti sa mnom?", agent.getName()));
        delete(message);
end

// Message from user, in croatian, is received and sent to translate
rule "Translate user message for GPT-3"
    when
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Maya()
    then
        modify(agent) {setTranslationFor('gpt3')};
        agent.translate(message.getText(), 'hr', 'en');
        delete(message);
end

// User message is now in english, added to memory and memory is sent to GPT-3
rule "Send user translated text to GPT-3"
    when
        translationResult: Result() from entry-point "signals"
        agent: Maya(
            translationFor == 'gpt3'
        )
    then
        modify(agent) {
            addMessageToMemory("Human", translationResult.getResult()), 
            setTranslationFor('user')
        };
        agent.askGPT3();
        delete(translationResult);
end

// Response from GPT3, in english, is added to memory and sent to translate for user
rule "Translate GPT3 response"
    when
        gpt3Result: GPT3Completion() from entry-point "signals"
        agent: Maya()
    then
        String response = gpt3Result.getBestResponse();
        modify(agent) {addMessageToMemory("Maya", response)};
        agent.translate(response, 'en', 'hr');
        delete(gpt3Result);
end

// GPT-3 response is translated to croatian and sent to user
rule "Send GPT-3 translated text to user"
    when
        translationResult: Result() from entry-point "signals"
        agent: Maya(
            translationFor == 'user'
        )
    then
        modify(agent) {setTranslationFor('gpt3')};
        agent.sendMessage(translationResult.getResult());
        delete(translationResult);
end

rule "Answered yes to study with Maya"
    salience 100
    when
        message: TelegramReceivedMessage(text.equalsIgnoreCase("da")) from entry-point "signals"
        agent: Maya(
            askedStudyWithMe == true
        )
    then
        modify(agent) {
            setAskedStudyWithMe(false),
            setAskedForPomodoro(true),
            setPomodoroTimer(new Date())
        };
        agent.sendMessage("Odlično! Isprobat ćemo Pomodoro tehniku učenja. "
                            + "To ti je kad učimo 25 minuta i onda uzmemo pauzu od 5 minuta.");
        agent.sendMessage("Upiši 'start'!");
        delete(message);
end

rule "Answered no to study with Maya"
    salience 100
    when
        message: TelegramReceivedMessage(text.equalsIgnoreCase("ne")) from entry-point "signals"
        agent: Maya(
            askedStudyWithMe == true
        )
    then
        modify(agent) {setAskedStudyWithMe(false)};
        agent.sendMessage("To je loše, trebali bi smo učiti za školu");
        agent.sendMessage("Pustit ću te da se igraš ali ja sam ovdje ako želiš učiti!");
        delete(message);
end

rule "Answered undefined to study with Maya"
    salience 90
    when
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Maya(
            askedStudyWithMe == true
        )
    then
        agent.sendMessage("Ne razumijem te, molim te upiši 'da' ili 'ne'!");
        delete(message);
end

rule "Start pomodoro"
    salience 100
    when
        message: TelegramReceivedMessage(text.equalsIgnoreCase("start")) from entry-point "signals"
        agent: Maya()
    then
        modify(agent) {
            setAskedForPomodoro(false),
            setPomodoroOn(true),
            setBreakOn(false),
            setPomodoroTimer(new Date())
        };
        agent.sendMessage("OK, počela sam odbrojavati, uči 25 minuta i ja ću te obavjestiti o pauzi!");
        delete(message);
end

rule "Start break"
    salience 90
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            pomodoroOn == true,
            pomodoroTimer before[25m] ts
        )
    then
        modify(agent) {
            setBreakOn(true),
            setPomodoroOn(false),
            setPomodoroTimer(new Date()),
            clearMemory()
        };
        agent.sendMessage("Hej, počela je pauza! Odmori se 5 minuta.");
end

rule "Ask for another pomodoro after the break has finished"
    salience 90
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            breakOn == true,
            pomodoroTimer before[5m] ts
        )
    then
        modify(agent) {
            setBreakOn(false),
            setAskedForPomodoro(true),
            setPomodoroTimer(new Date())
            clearMemory()
        };
        agent.sendMessage("Tvoja pauza je završila! Želiš li započeti još jedan pomodoro? Samo upiši 'start'!");
end

rule "Asked for pomodoro but user didn't responded in five minutes"
    salience 90
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            askedForPomodoro == true,
            pomodoroTimer before[5m] ts
        )
    then
        modify(agent) {
            setPomodoroTimer(new Date()),
            incrementPomodoroQuestionCounter()
        };
        agent.sendMessage("Hej, nisi započeo/la pomodoro. " 
            + "Upiši 'start' ako želiš nastaviti učiti ili upiši 'otkaži' ako nemaš vremena sada!");
end

rule "User wants to cancel pomodoro"
    salience 100
    when
        message: TelegramReceivedMessage(text.equalsIgnoreCase("otkaži")) from entry-point "signals"
        agent: Maya(
            askedForPomodoro == true
        )
    then
        modify(agent) {
            setPomodoroTimer(null),
            setPomodoroOn(false),
            setBreakOn(false),
            setAskedForPomodoro(false)           
        };
        agent.sendMessage("Ah, žao mi je to čuti, ali dobro, otkazat ću pomodoro.");
        delete(message);
end

rule "Cancel start pomodoro question if user don't respond in 2 times"
    salience 100
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            askedForPomodoro == true,
            pomodoroQuestionCounter >= 2,
            pomodoroTimer before[4m] ts
        )
    then
        modify(agent) {
            setPomodoroTimer(null),
            setPomodoroOn(false),
            setBreakOn(false),
            setAskedForPomodoro(false),
            setPomodoroQuestionCounter(0),
            clearMemory()
        };
        agent.sendMessage("Hm, vidim da ne želiš učiti sa mnom. " 
                        + "Žao mi je zbog toga ali otkazat ću pomodoro!");
end

rule "Inform user about exam option"
    salience 90
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            notifiedAboutExamOption == false,
            pomodoroOn == false,
            breakOn == false,
            lastInteractionTime before[10m] ts
        )
    then
        modify(agent) {
            setNotifiedAboutExamOption(true),
            clearMemory()
        };
        agent.sendMessage(String.format(
            "Hej %1$s, da li znaš da te mogu pripremiti za ispit? ", agent.getName())
            + "Samo me pitaj koliko pitanja želiš i na koju temu. " 
            + "Na primjer: 'Molim te, daj mi 5 pitanja o papigama'.");
        agent.sendMessage("Probaj!");
end

rule "Inform user about essay option"
    salience 80
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Maya(
            notifiedAboutEssayOption == false,
            pomodoroOn == false,
            breakOn == false,
            lastInteractionTime before[10m] ts
        )
    then
        modify(agent) {
            setNotifiedAboutEssayOption(true),
            clearMemory()
        };
        agent.sendMessage(String.format(
            "Hej %1$s, jesi li znao/la da ti mogu dati obris eseja?", agent.getName())
            + "Na primjer, ako želiš napisati esej o papigama samo upiši 'Napravi obris za esej o papigama i koliko su one zanimljive:'.");
        agent.sendMessage("Ne zaboravi dodati dvotočku na kraju. I koristi riječ obris umjesto nacrta uvijek! Probaj!");
end